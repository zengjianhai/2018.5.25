<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
    	http://www.springframework.org/schema/beans  
    	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    	http://www.springframework.org/schema/tx   
   		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context-3.0.xsd
    	http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
   	<context:component-scan base-package="com.runner.dao" />
	<context:component-scan base-package="com.runner.service.impl" />
	<!-- 引入配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="classpath:db.properties">
	</bean>
	<!-- 通过c3p0数据源oracle连接数据库 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="${jdbc.driver}" p:jdbcUrl="${jdbc.url}"
		p:user="${jdbc.user}" p:password="${jdbc.passwd}"></bean>
	
	<!-- spring和myBatis完美整合，不需要myBatis的配置映射文件 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描mapper.xml文件 -->
		<property name="mapperLocations" value="classpath:com/runner/mapper/Mapper.xml"/>
	</bean>
	<!-- dao接口所在包名，spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.runner.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- 配置事物管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
	<!-- 给service包中的所有类的所有方法配置事务增强 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* com.runner.service.impl..*(..))"
			id="serviceMethod" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<!-- propagation="REQUIRED"事物传播 -->
		<!-- rollback-for="Throwable"表示有异常就回滚数据库，isolation="READ_COMMITTED"隔离级别 -->
			<tx:method name="*" propagation="REQUIRED" rollback-for="Throwable" isolation="READ_COMMITTED"/>
		</tx:attributes>
	</tx:advice>
	
</beans> 